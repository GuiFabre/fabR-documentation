[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Guillaume Fabre. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fabre G (2023). fabR: Wrapper Functions Collection Used Data Pipelines. R package version 1.0.0, https://github.com/GuiFabre/fabR/.","code":"@Manual{,   title = {fabR: Wrapper Functions Collection Used In Data Pipelines},   author = {Guillaume Fabre},   year = {2023},   note = {R package version 1.0.0},   url = {https://github.com/GuiFabre/fabR/}, }"},{"path":[]},{"path":"/index.html","id":"latest-version-101---update-2022-03-26","dir":"","previous_headings":"","what":"latest version: 1.0.1 - update 2022-03-26","title":"Wrapper Functions Collection Used In Data Pipelines ","text":"version includes Updates: Bug correction: Suppression: New feature: Deprecation: General:","code":""},{"path":"/reference/add_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an index column at the first place of a tibble — add_index","title":"Add an index column at the first place of a tibble — add_index","text":"Add index, possibly group, first place data frame tibble name default 'index' can named. 'index' already exists, given name, column can forced created, replace one","code":""},{"path":"/reference/add_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an index column at the first place of a tibble — add_index","text":"","code":"add_index(tbl, name_index = \"index\", start = 1, .force = FALSE)"},{"path":"/reference/add_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an index column at the first place of a tibble — add_index","text":"tbl tibble data frame name_index character string name column. start integer indicating firt index number. 1 default. .force TRUE FALSE, parameter indicates wheter column created already exists. FALSE default.","code":""},{"path":"/reference/add_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an index column at the first place of a tibble — add_index","text":"tibble data frame containing one extra first column 'index' given name.","code":""},{"path":"/reference/add_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an index column at the first place of a tibble — add_index","text":"","code":"if (FALSE) {  tbl = tibble(iris) name_index = \"Species\" .force = FALSE .force = TRUE  tibble(iris) %>% add_index add_index(tibble(iris), name_index = 'Species') add_index(tibble(iris), name_index = name_index, .force = TRUE)  }"},{"path":"/reference/add_template.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — add_template","title":"xxx xxx xxx — add_template","text":"xxx xxx xxx.","code":""},{"path":"/reference/add_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — add_template","text":"","code":"add_template(.fargs)"},{"path":"/reference/add_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — add_template","text":".fargs xxx xxx xxx","code":""},{"path":"/reference/add_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — add_template","text":"xxx xxx xxx.","code":""},{"path":"/reference/add_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — add_template","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/add_template_run.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — add_template_run","title":"xxx xxx xxx — add_template_run","text":"xxx xxx xxx.","code":""},{"path":"/reference/add_template_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — add_template_run","text":"","code":"add_template_run(obj, append_obj)"},{"path":"/reference/add_template_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — add_template_run","text":"obj xxx xxx xxx append_obj xxx xxx xxx","code":""},{"path":"/reference/add_template_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — add_template_run","text":"xxx xxx xxx.","code":""},{"path":"/reference/add_template_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — add_template_run","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/as_any_boolean.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — as_any_boolean","title":"xxx xxx xxx — as_any_boolean","text":"xxx xxx xxx.","code":""},{"path":"/reference/as_any_boolean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — as_any_boolean","text":"","code":"as_any_boolean(x)"},{"path":"/reference/as_any_boolean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — as_any_boolean","text":"x xxx xxx xxx","code":""},{"path":"/reference/as_any_boolean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — as_any_boolean","text":"xxx xxx xxx.","code":""},{"path":"/reference/as_any_boolean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — as_any_boolean","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy  }"},{"path":"/reference/as_any_date.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — as_any_date","title":"xxx xxx xxx — as_any_date","text":"Creates objects type \"Date\".","code":""},{"path":"/reference/as_any_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — as_any_date","text":"","code":"as_any_date(   x = as.character(),   format = c(\"dmy\", \"dym\", \"ymd\", \"ydm\", \"mdy\", \"myd\", \"as_date\") )"},{"path":"/reference/as_any_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — as_any_date","text":"x object coerced. format object coerced.","code":""},{"path":"/reference/as_any_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — as_any_date","text":"xxx xxx xxx","code":""},{"path":"/reference/as_any_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — as_any_date","text":"","code":"if (FALSE) { # Example 1: This example   }"},{"path":"/reference/as_any_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — as_any_symbol","title":"xxx xxx xxx — as_any_symbol","text":"xxx xxx xxx.","code":""},{"path":"/reference/as_any_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — as_any_symbol","text":"","code":"as_any_symbol(x)"},{"path":"/reference/as_any_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — as_any_symbol","text":"x xxx xxx xxx","code":""},{"path":"/reference/as_any_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — as_any_symbol","text":"xxx xxx xxx.","code":""},{"path":"/reference/as_any_symbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — as_any_symbol","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy  }"},{"path":"/reference/cast_error_fargs.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — cast_error_fargs","title":"xxx xxx xxx — cast_error_fargs","text":"xxx xxx xxx.","code":""},{"path":"/reference/cast_error_fargs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — cast_error_fargs","text":"","code":"cast_error_fargs(...)"},{"path":"/reference/cast_error_fargs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — cast_error_fargs","text":"... xxx xxx xxx","code":""},{"path":"/reference/cast_error_fargs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — cast_error_fargs","text":"xxx xxx xxx.","code":""},{"path":"/reference/cast_error_fargs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — cast_error_fargs","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/collect_roxygen.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — collect_roxygen","title":"xxx xxx xxx — collect_roxygen","text":"xxx xxx xxx.","code":""},{"path":"/reference/collect_roxygen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — collect_roxygen","text":"","code":"collect_roxygen(folder_r = \"R\")"},{"path":"/reference/collect_roxygen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — collect_roxygen","text":"folder_r xxx xxx xxx","code":""},{"path":"/reference/collect_roxygen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — collect_roxygen","text":"xxx xxx xxx.","code":""},{"path":"/reference/collect_roxygen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — collect_roxygen","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy   }"},{"path":"/reference/fabR_help.html","id":null,"dir":"Reference","previous_headings":"","what":"Call the help center for full documentation — fabR_help","title":"Call the help center for full documentation — fabR_help","text":"feature direct call documentation repository hosting package. user accesses description latest version package, vignettes, list functions.","code":""},{"path":"/reference/fabR_help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call the help center for full documentation — fabR_help","text":"","code":"fabR_help()"},{"path":"/reference/fabR_help.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call the help center for full documentation — fabR_help","text":"","code":"if (FALSE) { # Example 1: call the help center! fabR_help() }"},{"path":"/reference/file_index_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an index of files in a folder — file_index_create","title":"Create an index of files in a folder — file_index_create","text":"Creates tibble listing files specified folder (recursively) file path name useful metadata. index can used quickly find files environment. index also generates script read files R objects environment. Names R objects generated automatically file names (R objects created step command line generated stored column to_eval, ready evaluated generate R objects).","code":""},{"path":"/reference/file_index_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an index of files in a folder — file_index_create","text":"","code":"file_index_create(folder = getwd(), pattern = \"^\", negate = FALSE)"},{"path":"/reference/file_index_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an index of files in a folder — file_index_create","text":"folder character string identifying folder index. specified, current folder default pattern character string defining pattern sub-select within folder. Can useful excluding certain folders indexing (matching regex supported). negate logical. TRUE, return non-matching elements.","code":""},{"path":"/reference/file_index_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an index of files in a folder — file_index_create","text":"tibble folder_path, file_path, file_name, extension, file_type columns last column to_eval R code character vector read file environment.","code":""},{"path":"/reference/file_index_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an index of files in a folder — file_index_create","text":"user must make sure files folder indexed.","code":""},{"path":"/reference/file_index_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an index of files in a folder — file_index_create","text":"","code":"if (FALSE) { # Example 1: xxx }"},{"path":"/reference/file_index_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read, source and open objects from an index of files — file_index_read","title":"Read, source and open objects from an index of files — file_index_read","text":"Reads files file index tibble R objects generate environment R scripts sourced. file types opened browser (html files) environnement. index tibble provided, function creates one working directory.","code":""},{"path":"/reference/file_index_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read, source and open objects from an index of files — file_index_read","text":"","code":"file_index_read(   index,   file_path = \"^\",   file_name = \"^\",   extension = \"^\",   file_type = \"^\",   assign = FALSE,   .envir = parent.frame() )"},{"path":"/reference/file_index_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read, source and open objects from an index of files — file_index_read","text":"index index (tibble) folder file locations metadata, either previously generated file_index_create() created folder. file_path character string specifying file path search . Can full string substring (matching regex supported) file_name character string file name search . Can full string substring (matching regex supported). extension character string file extention search . Can full string substring (matching regex supported). file_type character string file type search . Can full string substring (matching regex supported). assign TRUE, name automatically assigned name object read. .envir environment use. parent.frame() default","code":""},{"path":"/reference/file_index_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read, source and open objects from an index of files — file_index_read","text":"R objects generated environment R scripts. R object names created automatically file names. Otherwise return messages indicating objects created, files opened, troubles occured","code":""},{"path":"/reference/file_index_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read, source and open objects from an index of files — file_index_read","text":"Can full string substring (matching regex supported).","code":""},{"path":"/reference/file_index_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read, source and open objects from an index of files — file_index_read","text":"","code":"if (FALSE) { # Example 1: xxx }"},{"path":"/reference/file_index_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search an index of files — file_index_search","title":"Search an index of files — file_index_search","text":"Searches file index R object (tibble) based pattern query options provides table files specified folder corresponding query listed (recursively). index tibble provided, function creates one working directory.","code":""},{"path":"/reference/file_index_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search an index of files — file_index_search","text":"","code":"file_index_search(   index,   file_path = \"^\",   file_name = \"^\",   extension = \"^\",   file_type = \"^\",   .fs_tree = TRUE )"},{"path":"/reference/file_index_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search an index of files — file_index_search","text":"index index (tibble) folder file locations metadata, either previously generated file_index_create() created folder. file_path character string specifying file path search . Can full string substring (matching regex supported) file_name character string file name search . Can full string substring (matching regex supported). extension character string file extention search . Can full string substring (matching regex supported). file_type character string file type search . Can full string substring (matching regex supported). .fs_tree TRUE, return file tree query.","code":""},{"path":"/reference/file_index_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search an index of files — file_index_search","text":"tibble indexed information files matching query.","code":""},{"path":"/reference/file_index_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search an index of files — file_index_search","text":"","code":"if (FALSE) { # Example 1: xxx }"},{"path":"/reference/get_all_na_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract columns that are all 'NA' from a tbl — get_all_na_cols","title":"Extract columns that are all 'NA' from a tbl — get_all_na_cols","text":"helper function extracts names columns tbl NA values observations.","code":""},{"path":"/reference/get_all_na_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract columns that are all 'NA' from a tbl — get_all_na_cols","text":"","code":"get_all_na_cols(tbl)"},{"path":"/reference/get_all_na_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract columns that are all 'NA' from a tbl — get_all_na_cols","text":"tbl R object(dataframe tibble) input tbl","code":""},{"path":"/reference/get_all_na_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract columns that are all 'NA' from a tbl — get_all_na_cols","text":"vector string indicating either tbl empty columns names empty columns.","code":""},{"path":"/reference/get_all_na_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract columns that are all 'NA' from a tbl — get_all_na_cols","text":"","code":"if (FALSE) { # Example 1: All columns have observation get_all_na_cols(iris)  # Example 2: One column doesn't have any observations get_all_na_cols(iris %>% mutate(new_col = NA)) }"},{"path":"/reference/get_all_na_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract columns that are all 'NA' from a tbl — get_all_na_rows","title":"Extract columns that are all 'NA' from a tbl — get_all_na_rows","text":"helper function extracts names columns tbl NA values observations.","code":""},{"path":"/reference/get_all_na_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract columns that are all 'NA' from a tbl — get_all_na_rows","text":"","code":"get_all_na_rows(tbl)"},{"path":"/reference/get_all_na_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract columns that are all 'NA' from a tbl — get_all_na_rows","text":"tbl R object(dataframe tibble) input tbl","code":""},{"path":"/reference/get_all_na_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract columns that are all 'NA' from a tbl — get_all_na_rows","text":"vector string indicating either tbl empty columns names empty columns.","code":""},{"path":"/reference/get_all_na_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract columns that are all 'NA' from a tbl — get_all_na_rows","text":"","code":"if (FALSE) { # Example 1: All columns have observation get_all_na_cols(iris)  # Example 2: One column doesn't have any observations get_all_na_cols(iris %>% mutate(new_col = NA)) }"},{"path":"/reference/get_args.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — get_args","title":"xxx xxx xxx — get_args","text":"xxx xxx xxx.","code":""},{"path":"/reference/get_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — get_args","text":"","code":"get_args(...)"},{"path":"/reference/get_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — get_args","text":"... xxx xxx xxx","code":""},{"path":"/reference/get_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — get_args","text":"xxx xxx xxx.","code":""},{"path":"/reference/get_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — get_args","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/get_duplicated_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract columns that have same values in a tibble — get_duplicated_cols","title":"Extract columns that have same values in a tibble — get_duplicated_cols","text":"helper function extracts names columns tibble identical values observations.","code":""},{"path":"/reference/get_duplicated_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract columns that have same values in a tibble — get_duplicated_cols","text":"","code":"get_duplicated_cols(tbl)"},{"path":"/reference/get_duplicated_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract columns that have same values in a tibble — get_duplicated_cols","text":"tbl R object(dataframe tibble) input tbl","code":""},{"path":"/reference/get_duplicated_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract columns that have same values in a tibble — get_duplicated_cols","text":"tibble indicating columns values tibble","code":""},{"path":"/reference/get_duplicated_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract columns that have same values in a tibble — get_duplicated_cols","text":"","code":"if (FALSE) {  mtcars_duplicated <-  mtcars %>%  mutate(   cyl_2 = cyl,   cyl_3 = cyl,   mpg_2 = mpg)   get_duplicated_cols(mtcars_duplicated)  }"},{"path":"/reference/get_duplicated_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract observations(rows) that have same values in a tibble — get_duplicated_rows","title":"Extract observations(rows) that have same values in a tibble — get_duplicated_rows","text":"helper function extracts row number (first column value) tibble identical values columns. function can used either whole columns excluding first column (id) (can useful identify repeated observation across different ids)","code":""},{"path":"/reference/get_duplicated_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract observations(rows) that have same values in a tibble — get_duplicated_rows","text":"","code":"get_duplicated_rows(tbl, id_col = NULL)"},{"path":"/reference/get_duplicated_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract observations(rows) that have same values in a tibble — get_duplicated_rows","text":"tbl R object(dataframe tibble) input tbl id_col character string specifying column ignore identification repeated observations. NULL (default), columns taken account repeated observation identification. row number used identify observations.","code":""},{"path":"/reference/get_duplicated_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract observations(rows) that have same values in a tibble — get_duplicated_rows","text":"tibble indicating row values tibble","code":""},{"path":"/reference/get_duplicated_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract observations(rows) that have same values in a tibble — get_duplicated_rows","text":"","code":"if (FALSE) {  # the row number is returned to identify which observations have repeated # values mtcars_duplicated <-   mtcars %>%   bind_rows(.,mtcars %>% slice(1)) %>%   as_tibble %>%   get_duplicated_rows()   }"},{"path":"/reference/get_path_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the paths of branches in a list — get_path_list","title":"Get the paths of branches in a list — get_path_list","text":"Function recursively go list object store tibble path element list. paths can edited accessed using [fabR::parceval()] example.","code":""},{"path":"/reference/get_path_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the paths of branches in a list — get_path_list","text":"","code":"get_path_list(list_obj, .map_list = NULL)"},{"path":"/reference/get_path_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the paths of branches in a list — get_path_list","text":"list_obj R list object evaluated .map_list non usable parameter. parameter ensure recursivity. modification object returns NULL","code":""},{"path":"/reference/get_path_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the paths of branches in a list — get_path_list","text":"tibble containing paths element list class leaf (can list, R objects).","code":""},{"path":"/reference/get_path_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the paths of branches in a list — get_path_list","text":"","code":"if (FALSE) {  MyList <- list(   My_iris = tibble(iris),   My_car = list(     car_data = tibble(cars),     model_data = tibble(mtcars)     ) )  get_path_list(MyList)#'  }"},{"path":"/reference/get_unique_value_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract columns that are all 'NA' from a tbl — get_unique_value_cols","title":"Extract columns that are all 'NA' from a tbl — get_unique_value_cols","text":"helper function extracts names columns tbl NA values observations.","code":""},{"path":"/reference/get_unique_value_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract columns that are all 'NA' from a tbl — get_unique_value_cols","text":"","code":"get_unique_value_cols(tbl)"},{"path":"/reference/get_unique_value_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract columns that are all 'NA' from a tbl — get_unique_value_cols","text":"tbl R object(dataframe tibble) input tbl","code":""},{"path":"/reference/get_unique_value_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract columns that are all 'NA' from a tbl — get_unique_value_cols","text":"vector string indicating either tbl empty columns names empty columns.","code":""},{"path":"/reference/get_unique_value_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract columns that are all 'NA' from a tbl — get_unique_value_cols","text":"","code":"if (FALSE) { # Example 1: All columns have observation get_all_na_cols(iris)  # Example 2: One column doesn't have any observations get_all_na_cols(iris %>% mutate(new_col = NA)) }"},{"path":"/reference/guess_date_format.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — guess_date_format","title":"xxx xxx xxx — guess_date_format","text":"xxx xxx xxx.","code":""},{"path":"/reference/guess_date_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — guess_date_format","text":"","code":"guess_date_format(tbl, col = NULL)"},{"path":"/reference/guess_date_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — guess_date_format","text":"tbl xxx col xxx","code":""},{"path":"/reference/guess_date_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — guess_date_format","text":"xxx xxx xxx.","code":""},{"path":"/reference/guess_date_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — guess_date_format","text":"","code":"if (FALSE) { # Example 1: xxx xxx xxx.  }"},{"path":"/reference/make_name_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut to create beautiful names in a list — make_name_list","title":"Shortcut to create beautiful names in a list — make_name_list","text":"Generate name element list. function targeted functions creations handle lists. lists may need names go elements. function works [stats::setNames()] allows user provide name shorter, user-friendly lists.","code":""},{"path":"/reference/make_name_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut to create beautiful names in a list — make_name_list","text":"","code":"make_name_list(args_list, list_elem)"},{"path":"/reference/make_name_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut to create beautiful names in a list — make_name_list","text":"args_list xxx xxx xxx list_elem xxx xxx xxx","code":""},{"path":"/reference/make_name_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shortcut to create beautiful names in a list — make_name_list","text":"xxx xxx xxx.","code":""},{"path":"/reference/make_name_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut to create beautiful names in a list — make_name_list","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy  }"},{"path":"/reference/message_on_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut to display a message and acceptation on prompt — message_on_prompt","title":"Shortcut to display a message and acceptation on prompt — message_on_prompt","text":"Shortcut allowing provide user prompt message read validated pursuing process. function targeted function creators user interaction required.","code":""},{"path":"/reference/message_on_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut to display a message and acceptation on prompt — message_on_prompt","text":"","code":"message_on_prompt(...)"},{"path":"/reference/message_on_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut to display a message and acceptation on prompt — message_on_prompt","text":"... String character put message","code":""},{"path":"/reference/message_on_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut to display a message and acceptation on prompt — message_on_prompt","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy  message_on_prompt(\"Do you want continue? (Y/N)\")  }"},{"path":"/reference/parceval.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut to turn String character into R code — parceval","title":"Shortcut to turn String character into R code — parceval","text":"Shortcut [base::parse()] [base::eval()]uate R expression character string, turn runable R code. function targeted interaction external files (expression stored text format) ; tidy elements code expression generated using [tidyr::mutate()], combined [base::paste0()] ; , map, etc. loops character string expression can indexed iteratively generated evaluated ; objects created (using assign, <- <<- obj) name R object stored string. issues may occur parceval used different environment, function. Prefer eval(parse(text = ...) instead.","code":""},{"path":"/reference/parceval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut to turn String character into R code — parceval","text":"","code":"parceval(...)"},{"path":"/reference/parceval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut to turn String character into R code — parceval","text":"... String character parsed evaluated","code":""},{"path":"/reference/parceval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut to turn String character into R code — parceval","text":"","code":"if (FALSE) {  # Simple assignation will assignate 'b' in parceval environment (which is associated # to a function and different from .GlobalEnv, by definition). # Double assignation will put 'b' in .GlobalEnv. # (similar to assign(x = \"b\",value = 1,envir = .GlobalEnv)) a <- 1 parceval(\"b <<- 1\") print(a) print(b)  parceval(\"b <<- b + a\") print(b)  my_code <- paste0(\"b <<- b + \",rep(1,3), \"; message('value of b: ', b)\") parceval(my_code)  # use rowwise to directly use parceval in a tibble, or use a for loop. as_tibble(cars) %>% mutate(   to_eval = paste0(speed,\"/\",dist)) %>% rowwise() %>% mutate(   eval = parceval(to_eval))  # parceval can be parcevaled itself!  code_R <- 'as_tibble(cars) %>%   mutate(     to_eval = paste0(speed,\"/\",dist)) %>%   rowwise() %>%   mutate(     eval = parceval(to_eval))'  code_R %>% cat code_R %>% parceval   }"},{"path":"/reference/plot_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw bar plot of one (possibly grouped) column in a tbl — plot_bar","title":"Draw bar plot of one (possibly grouped) column in a tbl — plot_bar","text":"function draws bar plot values column. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose.","code":""},{"path":"/reference/plot_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw bar plot of one (possibly grouped) column in a tbl — plot_bar","text":"","code":"plot_bar(   tbl = \"iris\",   col = \"Species\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   out = \"ggplot2\",   group_by = NULL )"},{"path":"/reference/plot_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw bar plot of one (possibly grouped) column in a tbl — plot_bar","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. parameter specifies output expected: can either 'ggplot2', 'plotly','ggplot2-code', 'plotly-code','ggplot2-cat' 'plotly-cat'. gglot2 renders static plot, plotly dynamic plot, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/plot_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw bar plot of one (possibly grouped) column in a tbl — plot_bar","text":"bar plot object","code":""},{"path":"/reference/plot_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw bar plot of one (possibly grouped) column in a tbl — plot_bar","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided plot_bar()  # Example 2: graph of Species plot_bar(tbl = tbl, col = \"Species\", out = \"ggplot2\")  }"},{"path":"/reference/plot_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw box plot of one (possibly grouped) column in a tbl — plot_box","title":"Draw box plot of one (possibly grouped) column in a tbl — plot_box","text":"function draws box plot values column. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose.","code":""},{"path":"/reference/plot_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw box plot of one (possibly grouped) column in a tbl — plot_box","text":"","code":"plot_box(   tbl = \"airquality\",   col = \"Month\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   out = \"ggplot2\",   group_by = NULL )"},{"path":"/reference/plot_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw box plot of one (possibly grouped) column in a tbl — plot_box","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. parameter specifies output expected: can either 'ggplot2', 'plotly','ggplot2-code', 'plotly-code','ggplot2-cat' 'plotly-cat'. gglot2 renders static plot, plotly dynamic plot, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/plot_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw box plot of one (possibly grouped) column in a tbl — plot_box","text":"box plot object","code":""},{"path":"/reference/plot_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw box plot of one (possibly grouped) column in a tbl — plot_box","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided plot_box()  # Example 2: graph of Petal.Length plot_box(tbl = tbl, col = \"Petal.Length\", out = \"ggplot2\")  }"},{"path":"/reference/plot_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw lollipop plot of one (possibly grouped) time-related column in a tbl — plot_date","title":"Draw lollipop plot of one (possibly grouped) time-related column in a tbl — plot_date","text":"function draws lollipop plot values time related column. 'time' parameter uses lubridate synthax specify period time consider. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose.","code":""},{"path":"/reference/plot_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw lollipop plot of one (possibly grouped) time-related column in a tbl — plot_date","text":"","code":"plot_date(   tbl = \"airquality\",   col = \"Day\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   time = \"day\",   out = \"ggplot2\",   group_by = NULL )"},{"path":"/reference/plot_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw lollipop plot of one (possibly grouped) time-related column in a tbl — plot_date","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. time parameter following lubridate synthaxe specify period time consider. Can ymd, mdy, year, months, etc. See lubridate documentation. parameter specifies output expected: can either 'ggplot2', 'plotly','ggplot2-code', 'plotly-code','ggplot2-cat' 'plotly-cat'. gglot2 renders static plot, plotly dynamic plot, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/plot_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw lollipop plot of one (possibly grouped) time-related column in a tbl — plot_date","text":"lollipop plot object","code":""},{"path":"/reference/plot_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw lollipop plot of one (possibly grouped) time-related column in a tbl — plot_date","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided plot_date()  # Example 2: graph of  tbl = read_csv_any_formats(\"study_TOKYO.csv\") plot_date(tbl, col = \"dob\", out = \"ggplot2\",time = \"year\") plot_date(tbl, col = \"dob\", out = \"ggplot2\",time = \"month\")  }"},{"path":"/reference/plot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw density plot of one (possibly grouped) column in a tbl — plot_density","title":"Draw density plot of one (possibly grouped) column in a tbl — plot_density","text":"function draws density line plot values column. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose.","code":""},{"path":"/reference/plot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw density plot of one (possibly grouped) column in a tbl — plot_density","text":"","code":"plot_density(   tbl = \"iris\",   col = \"Sepal.Length\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   out = \"ggplot2\",   group_by = NULL )"},{"path":"/reference/plot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw density plot of one (possibly grouped) column in a tbl — plot_density","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. parameter specifies output expected: can either 'ggplot2', 'plotly','ggplot2-code', 'plotly-code','ggplot2-cat' 'plotly-cat'. gglot2 renders static plot, plotly dynamic plot, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/plot_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw density plot of one (possibly grouped) column in a tbl — plot_density","text":"density plot object","code":""},{"path":"/reference/plot_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw density plot of one (possibly grouped) column in a tbl — plot_density","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided plot_density()  # Example 2: graph of Petal.Length plot_density(tbl = tbl, col = \"Petal.Length\", out = \"ggplot2\")  }"},{"path":"/reference/plot_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw histogram of one (possibly grouped) column in a tbl — plot_histogram","title":"Draw histogram of one (possibly grouped) column in a tbl — plot_histogram","text":"function draws histogram plot values column. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose.","code":""},{"path":"/reference/plot_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw histogram of one (possibly grouped) column in a tbl — plot_histogram","text":"","code":"plot_histogram(   tbl = \"airquality\",   col = \"Ozone\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   out = \"ggplot2\",   group_by = NULL )"},{"path":"/reference/plot_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw histogram of one (possibly grouped) column in a tbl — plot_histogram","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. parameter specifies output expected: can either 'ggplot2', 'plotly','ggplot2-code', 'plotly-code','ggplot2-cat' 'plotly-cat'. gglot2 renders static plot, plotly dynamic plot, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/plot_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw histogram of one (possibly grouped) column in a tbl — plot_histogram","text":"hist plot object","code":""},{"path":"/reference/plot_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw histogram of one (possibly grouped) column in a tbl — plot_histogram","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided plot_histogram()  # Example 2: graph of Petal.Length plot_histogram(tbl = tbl, col = \"Petal.Length\", out = \"ggplot2\")  }"},{"path":"/reference/plot_main_word.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw bar plot of one (possibly grouped) open-text column in a tbl — plot_main_word","title":"Draw bar plot of one (possibly grouped) open-text column in a tbl — plot_main_word","text":"function draws bar plot values open text column. plot shows x-th first cited words column open text values using tidytext library. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose.","code":""},{"path":"/reference/plot_main_word.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw bar plot of one (possibly grouped) open-text column in a tbl — plot_main_word","text":"","code":"plot_main_word(   tbl = \"iris\",   col = \"Species\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   max = 10,   out = \"ggplot2\",   group_by = NULL )"},{"path":"/reference/plot_main_word.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw bar plot of one (possibly grouped) open-text column in a tbl — plot_main_word","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. max integer specifying x-th first cited words parameter specifies output expected: can either 'ggplot2', 'plotly','ggplot2-code', 'plotly-code','ggplot2-cat' 'plotly-cat'. gglot2 renders static plot, plotly dynamic plot, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/plot_main_word.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw bar plot of one (possibly grouped) open-text column in a tbl — plot_main_word","text":"bar plot object","code":""},{"path":"/reference/plot_main_word.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw bar plot of one (possibly grouped) open-text column in a tbl — plot_main_word","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided plot_main_word()  # Example 2: words contains in Species plot_main_word(tbl = tbl, col = \"Species\", out = \"ggplot2\")  }"},{"path":"/reference/plot_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw pie chart of one (possibly grouped) column in a tbl — plot_pie","title":"Draw pie chart of one (possibly grouped) column in a tbl — plot_pie","text":"function draws pie plot values column. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose.","code":""},{"path":"/reference/plot_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw pie chart of one (possibly grouped) column in a tbl — plot_pie","text":"","code":"plot_pie(   tbl = \"iris\",   col = \"Species\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   out = \"ggplot2\",   group_by = NULL )"},{"path":"/reference/plot_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw pie chart of one (possibly grouped) column in a tbl — plot_pie","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. parameter specifies output expected: can either 'ggplot2', 'plotly','ggplot2-code', 'plotly-code','ggplot2-cat' 'plotly-cat'. gglot2 renders static plot, plotly dynamic plot, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/plot_pie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw pie chart of one (possibly grouped) column in a tbl — plot_pie","text":"pie plot object","code":""},{"path":"/reference/plot_pie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw pie chart of one (possibly grouped) column in a tbl — plot_pie","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided plot_pie()  # Example 2: graph of Species plot_pie(tbl = tbl, col = \"Species\", out = \"ggplot2\")  }"},{"path":"/reference/plot_pie_valid_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw pie chart of one (possibly grouped) column in a tbl (valid, non-valid and missing values) — plot_pie_valid_value","title":"Draw pie chart of one (possibly grouped) column in a tbl (valid, non-valid and missing values) — plot_pie_valid_value","text":"function draws pie plot values column separating valid, non-valid missing values. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose.","code":""},{"path":"/reference/plot_pie_valid_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw pie chart of one (possibly grouped) column in a tbl (valid, non-valid and missing values) — plot_pie_valid_value","text":"","code":"plot_pie_valid_value(   tbl = \"iris\",   col = \"Species\",   filter = \"c()\",   negate = FALSE,   missing_values = \"'versicolor'\",   out = \"ggplot2\",   group_by = NULL )"},{"path":"/reference/plot_pie_valid_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw pie chart of one (possibly grouped) column in a tbl (valid, non-valid and missing values) — plot_pie_valid_value","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. parameter specifies output expected: can either 'ggplot2', 'plotly','ggplot2-code', 'plotly-code','ggplot2-cat' 'plotly-cat'. gglot2 renders static plot, plotly dynamic plot, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/plot_pie_valid_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw pie chart of one (possibly grouped) column in a tbl (valid, non-valid and missing values) — plot_pie_valid_value","text":"pie plot object","code":""},{"path":"/reference/plot_pie_valid_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw pie chart of one (possibly grouped) column in a tbl (valid, non-valid and missing values) — plot_pie_valid_value","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided  # Example 2: graph of Species (virginica is associated to missing values for the # purpose of example) plot_pie_valid_value(   tbl = tbl,   col = \"Species\",   missing_values = \"'virginica'\" ,   out = \"ggplot2\")  }"},{"path":"/reference/prep_template.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — prep_template","title":"xxx xxx xxx — prep_template","text":"xxx xxx xxx.","code":""},{"path":"/reference/prep_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — prep_template","text":"","code":"prep_template(.fargs)"},{"path":"/reference/prep_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — prep_template","text":".fargs xxx xxx xxx","code":""},{"path":"/reference/prep_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — prep_template","text":"xxx xxx xxx.","code":""},{"path":"/reference/prep_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — prep_template","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/prep_template_run.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — prep_template_run","title":"xxx xxx xxx — prep_template_run","text":"xxx xxx xxx.","code":""},{"path":"/reference/prep_template_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — prep_template_run","text":"","code":"prep_template_run(obj)"},{"path":"/reference/prep_template_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — prep_template_run","text":"obj xxx xxx xxx","code":""},{"path":"/reference/prep_template_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — prep_template_run","text":"xxx xxx xxx.","code":""},{"path":"/reference/prep_template_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — prep_template_run","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/read_csv_any_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a csv file using read_csv and avoid errors — read_csv_any_formats","title":"Read a csv file using read_csv and avoid errors — read_csv_any_formats","text":"csv file read twice detect number lines use attributing column type ('guess_max' parameter read_csv). avoids common errors reading csv files.","code":""},{"path":"/reference/read_csv_any_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a csv file using read_csv and avoid errors — read_csv_any_formats","text":"","code":"read_csv_any_formats(filename)"},{"path":"/reference/read_csv_any_formats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a csv file using read_csv and avoid errors — read_csv_any_formats","text":"filename character string path csv file.","code":""},{"path":"/reference/read_csv_any_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a csv file using read_csv and avoid errors — read_csv_any_formats","text":"tibble corresponding csv read.","code":""},{"path":"/reference/read_csv_any_formats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a csv file using read_csv and avoid errors — read_csv_any_formats","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy }"},{"path":"/reference/read_excel_allsheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all Excel sheets using readxl::read_excel recursively — read_excel_allsheets","title":"Read all Excel sheets using readxl::read_excel recursively — read_excel_allsheets","text":"Excel file read values placed list tibbles, sheet separate element list. Excel file one sheet, output single tibble. See [readxl::read_excel()]","code":""},{"path":"/reference/read_excel_allsheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all Excel sheets using readxl::read_excel recursively — read_excel_allsheets","text":"","code":"read_excel_allsheets(filename, sheets = \"\")"},{"path":"/reference/read_excel_allsheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all Excel sheets using readxl::read_excel recursively — read_excel_allsheets","text":"filename character string path Excel file. sheets vector containing sheets read.","code":""},{"path":"/reference/read_excel_allsheets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all Excel sheets using readxl::read_excel recursively — read_excel_allsheets","text":"list tibbles corresponding sheets read, single tibble number sheets one.","code":""},{"path":"/reference/read_excel_allsheets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read all Excel sheets using readxl::read_excel recursively — read_excel_allsheets","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy   }"},{"path":"/reference/set_template.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — set_template","title":"xxx xxx xxx — set_template","text":"xxx xxx xxx.","code":""},{"path":"/reference/set_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — set_template","text":"","code":"set_template(attributes, version = NULL)"},{"path":"/reference/set_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — set_template","text":"attributes xxx xxx xxx version xxx xxx xxx","code":""},{"path":"/reference/set_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — set_template","text":"xxx xxx xxx.","code":""},{"path":"/reference/set_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — set_template","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/set_template_run.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — set_template_run","title":"xxx xxx xxx — set_template_run","text":"xxx xxx xxx.","code":""},{"path":"/reference/set_template_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — set_template_run","text":"","code":"set_template_run(attributes)"},{"path":"/reference/set_template_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — set_template_run","text":"attributes xxx xxx xxx","code":""},{"path":"/reference/set_template_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — set_template_run","text":"xxx xxx xxx.","code":""},{"path":"/reference/set_template_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — set_template_run","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/show_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — show_pipeline","title":"xxx xxx xxx — show_pipeline","text":"xxx xxx xxx.","code":""},{"path":"/reference/show_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — show_pipeline","text":"","code":"show_pipeline(.fargs)"},{"path":"/reference/show_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — show_pipeline","text":".fargs xxx xxx xxx","code":""},{"path":"/reference/show_pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — show_pipeline","text":"xxx xxx xxx.","code":""},{"path":"/reference/show_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — show_pipeline","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/show_template.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — show_template","title":"xxx xxx xxx — show_template","text":"xxx xxx xxx.","code":""},{"path":"/reference/show_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — show_template","text":"","code":"show_template(.fargs)"},{"path":"/reference/show_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — show_template","text":".fargs xxx xxx xxx","code":""},{"path":"/reference/show_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — show_template","text":"xxx xxx xxx.","code":""},{"path":"/reference/show_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — show_template","text":"","code":"if (FALSE) {  # Example 1: xxx xxx xxx.   }"},{"path":"/reference/silently_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut to silently run a code chunk avoiding error (with try), messages and warnings — silently_run","title":"Shortcut to silently run a code chunk avoiding error (with try), messages and warnings — silently_run","text":"Shortcut avoiding user get messages, warnings stopped error. usage similar [base::suppressWarnings()]. function targeted function creators user experience enhancement sought.","code":""},{"path":"/reference/silently_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut to silently run a code chunk avoiding error (with try), messages and warnings — silently_run","text":"","code":"silently_run(...)"},{"path":"/reference/silently_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut to silently run a code chunk avoiding error (with try), messages and warnings — silently_run","text":"... R code","code":""},{"path":"/reference/silently_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut to silently run a code chunk avoiding error (with try), messages and warnings — silently_run","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy  }"},{"path":"/reference/summary_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary table of one (possibly grouped) category-type column in a tbl — summary_category","title":"Create summary table of one (possibly grouped) category-type column in a tbl — summary_category","text":"function creates datatable values column separating valid, non-valid missing values. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose. user can download datatable csv format.","code":""},{"path":"/reference/summary_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary table of one (possibly grouped) category-type column in a tbl — summary_category","text":"","code":"summary_category(   tbl = \"iris\",   col = \"col\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   out = \"DT-cat\",   group_by = NULL )"},{"path":"/reference/summary_category.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary table of one (possibly grouped) category-type column in a tbl — summary_category","text":"tbl character string tibble specifying input tbl col character string column interest filter character string subset rows, applying expressions ... column values determine rows retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values exclud counting, separated valid values. parameter specifies output expected: can either 'DT', 'DT-code' 'DT-cat'. DT renders datatable using DT library, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/summary_category.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create summary table of one (possibly grouped) category-type column in a tbl — summary_category","text":"datatable (editable) object R script character string create .","code":""},{"path":"/reference/summary_category.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary table of one (possibly grouped) category-type column in a tbl — summary_category","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided summary_category()  # Example 2: summary table of Petal.Length summary_category(tbl = iris, col = \"Species\", out = \"DT\")  }"},{"path":"/reference/summary_numerical.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary table of one (possibly grouped) numerical-type column in a tbl — summary_numerical","title":"Create summary table of one (possibly grouped) numerical-type column in a tbl — summary_numerical","text":"function creates datatable values column separating valid, non-valid missing values. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose. user can download datatable csv format.","code":""},{"path":"/reference/summary_numerical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary table of one (possibly grouped) numerical-type column in a tbl — summary_numerical","text":"","code":"summary_numerical(   tbl = \"iris\",   col = \"col\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   out = \"DT-cat\",   group_by = NULL )"},{"path":"/reference/summary_numerical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary table of one (possibly grouped) numerical-type column in a tbl — summary_numerical","text":"tbl character string tibble col character string column interest filter character string subset rows, applying expressions ... column values determine rows retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values exclud counting, separated valid values. parameter specifies output expected: can either 'DT', 'DT-code' 'DT-cat'. DT renders datatable using DT library, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/summary_numerical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create summary table of one (possibly grouped) numerical-type column in a tbl — summary_numerical","text":"datatable (editable) object R script character string create .","code":""},{"path":"/reference/summary_numerical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary table of one (possibly grouped) numerical-type column in a tbl — summary_numerical","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided summary_numerical()  # Example 2: summary table of Petal.Length summary_numerical(tbl = iris, col = \"Petal.Length\", out = \"DT\")  }"},{"path":"/reference/summary_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary table of one (possibly grouped) text-type column in a tbl — summary_text","title":"Create summary table of one (possibly grouped) text-type column in a tbl — summary_text","text":"function creates datatable values column separate valid, non-valid missing values. Missing values can given input non-valid valid values separately, grouped another column. output can editable (using plotly library) static (using ggplot2 library). R-code also editable coding recycling purpose. user can download datatable csv format.","code":""},{"path":"/reference/summary_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary table of one (possibly grouped) text-type column in a tbl — summary_text","text":"","code":"summary_text(   tbl = \"iris\",   col = \"col\",   filter = \"c()\",   negate = FALSE,   missing_values = \"c()\",   out = \"DT-cat\",   group_by = NULL )"},{"path":"/reference/summary_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary table of one (possibly grouped) text-type column in a tbl — summary_text","text":"tbl character string tibble specifying input tbl col character string specifying column interest filter character string specifying values filter. (equivalent 'values ') determines values retained. can applied grouped ungrouped data. negate TRUE, return non-matching elements. missing_values Vector listing values exclude valid values. values excluded counting - displayed separately valid values. parameter specifies output expected: can either 'DT', 'DT-code' 'DT-cat'. DT renders datatable using DT library, code gives code string (usable directly eval/parse functions) cat provides indented code console. group_by character string one column tbl can taken grouping column. visual element grouped displayed column.","code":""},{"path":"/reference/summary_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create summary table of one (possibly grouped) text-type column in a tbl — summary_text","text":"datatable (editable) object R script character string create .","code":""},{"path":"/reference/summary_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary table of one (possibly grouped) text-type column in a tbl — summary_text","text":"","code":"if (FALSE) { # Example 1: cat output generated as a template when no argument provided summary_text()  # Example 2: summary table of Species summary_text(tbl = iris, col = \"Species\", out = \"DT\")  }"},{"path":"/reference/template_visual_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bookdown template for the visual report — template_visual_report","title":"Create a bookdown template for the visual report — template_visual_report","text":"helper function creates template visual report bookdown. template taken following link: https://github.com/jtr13/bookdown-template/archive/refs/heads/master.zip folder","code":""},{"path":"/reference/template_visual_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bookdown template for the visual report — template_visual_report","text":"","code":"template_visual_report(to = getwd())"},{"path":"/reference/template_visual_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bookdown template for the visual report — template_visual_report","text":"character string path bookdown report placed","code":""},{"path":"/reference/template_visual_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bookdown template for the visual report — template_visual_report","text":"folder containing files (Rmd, yml, docs, ...) generate bookdown report","code":""},{"path":"/reference/template_visual_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a bookdown template for the visual report — template_visual_report","text":"","code":"if (FALSE) { # Example 1: create a folder containing template  template_visual_report(\"template\")  }"},{"path":"/reference/which_any_date.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx xxx xxx — which_any_date","title":"xxx xxx xxx — which_any_date","text":"Creates objects type \"Date\".","code":""},{"path":"/reference/which_any_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx xxx xxx — which_any_date","text":"","code":"which_any_date(   x,   format = c(\"dmy\", \"dym\", \"ymd\", \"ydm\", \"mdy\", \"myd\", \"as_date\") )"},{"path":"/reference/which_any_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx xxx xxx — which_any_date","text":"x object coerced. format object coerced.","code":""},{"path":"/reference/which_any_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx xxx xxx — which_any_date","text":"xxx xxx xxx","code":""},{"path":"/reference/which_any_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx xxx xxx — which_any_date","text":"","code":"if (FALSE) { # Example 1: This example   }"},{"path":"/reference/write_excel_allsheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Write all Excel sheets using xlsx::write.xlsx recursively — write_excel_allsheets","title":"Write all Excel sheets using xlsx::write.xlsx recursively — write_excel_allsheets","text":"R objects read values placed separated sheets. function inspired function proposed https://statmethods.wordpress.com/2014/06/19/quickly-export-multiple-r-objects---excel-workbook/","code":""},{"path":"/reference/write_excel_allsheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write all Excel sheets using xlsx::write.xlsx recursively — write_excel_allsheets","text":"","code":"write_excel_allsheets(list, filename)"},{"path":"/reference/write_excel_allsheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write all Excel sheets using xlsx::write.xlsx recursively — write_excel_allsheets","text":"list R objects, coma separated. filename character string path Excel file.","code":""},{"path":"/reference/write_excel_allsheets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write all Excel sheets using xlsx::write.xlsx recursively — write_excel_allsheets","text":"","code":"if (FALSE) {  # Example 1: yyy yyy yyy  }"}]
